{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{{ attach_library('ellison/onpage-navigation') }}

{%
  set classes = [
    paragraph.bundle|clean_class
  ]
%}

{% set display_style_value = content.field_display_style | render | striptags | trim %}

{% include "@organisms/group/group.html.twig" with {
  header: content.field_header,
  body: content.field_content,
  footer: content.field_footer,
  id: content.field_unique_id | render | striptags | trim,
  group: content.field_group,
  background_color: content.field_background_color | render | striptags | trim,
  background_diagonal: content.field_diagonal_background | render | striptags | trim,
  background_full_width: content.field_full_width_background | render | striptags | trim,
  display_style: display_style_value == 'row' ? 'display-as-rows' : 'display-as-columns',
  background_tilt: content.field_enable_back_slash_tilt | render | striptags | trim,
  vertical_align_items: content.field_vertical_align_items | render | striptags | trim,
  full_width_content: content.field_enable_full_width_content | render | striptags | trim,
  remove_margins: content.field_remove_margins | render | striptags | trim,
  items_per_row: content.field_items_per_row | render | striptags | trim,
  data: content,
} %}
