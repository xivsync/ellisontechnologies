!function(){function n(n){return function(n){if(Array.isArray(n))return e(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||t(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}function e(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,r=Array(t);e<t;e++)r[e]=n[e];return r}Drupal.behaviors.modelListing={attach:function(e){once("filterByRegion",".model-listing",e).forEach((function(e){drupalSettings.ellison.session_region;var r,o=[],a=function(n,e){var r="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!r){if(Array.isArray(n)||(r=t(n))){r&&(n=r);var o=0,a=function(){};return{s:a,n:function(){return o>=n.length?{done:!0}:{done:!1,value:n[o++]}},e:function(n){throw n},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i=!0,l=!1;return{s:function(){r=r.call(n)},n:function(){var n=r.next();return i=n.done,n},e:function(n){l=!0},f:function n(){try{i||null==r.return||r.return()}finally{if(l)throw n}}}}(e.getElementsByClassName("collections"));try{for(a.s();!(r=a.n()).done;){collectionsEl=r.value;var i=collectionsEl.getElementsByClassName("region")[0].dataset.regions;collectionsEl.dataset.brandRegions=i||"none",collectionsEl.classList.add(i?"check-regions":"check-no-regions");var l=i.split(",");o=o.concat(l),n(new Set(l)).forEach((function(n){collectionsEl.classList.add("region-"+n.replace(" - ","").replace(" ","").toLowerCase())}))}}catch(e){a.e(e)}finally{a.f()}}))}}}();