<?php
/**
 * @file
 * Provides functionality for handling webform hook.
 */

/**
 * Implements hook_form_alter().
 */
function ellison_webform_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if (strpos($form_id, 'webform_submission_contact') !== FALSE ||
    strpos($form_id, 'webform_submission_service_and_maintenance') !== FALSE ||
    strpos($form_id, 'webform_submission_parts_and_accessories') !== FALSE ||
    strpos($form_id, 'webform_submission_training_request') !== FALSE
  ) {
    $session = \Drupal::request()->getSession();
    $ellison_region = $session->get('ellison_region');

    $region = [];
    if (!empty($_COOKIE['ellison_region']) ) {
      $region = json_decode($_COOKIE['ellison_region'], TRUE);
    }
    elseif (!empty($ellison_region)) {
      $region = json_decode($ellison_region, TRUE);
    }
    if (!empty($region)) {
      if (isset($form['elements']['location']) || isset($form['elements']['select_location'])) {
        if (!empty($region['region_id'])) {
          $parent_id = $region['region_id'];
          $child_terms = \Drupal::entityTypeManager()
            ->getStorage('taxonomy_term')
            ->loadTree('regions', $parent_id, NULL, FALSE);
          $child_region = [];
          foreach ($child_terms as $term) {
            $child_region[$term->name] = $term->name;
          }
          if (isset($form['elements']['location'])) {
            $form['elements']['location']['#options'] = $child_region;
            if (empty($child_region)) {
              $form['elements']['location']['#access'] = FALSE;
            }
          }
          elseif (isset($form['elements']['select_location']) && !empty($child_region)) {
            $form['elements']['select_location']['#options'] = $child_region;
          }
        }
      }
      if (isset($form['elements']['region__c'])) {
        // Set the form element 'region__c' to the value of $region.
        if(is_array($region) && isset($region['sf_region_id']) && !empty($region['sf_region_id'])){
            $form['elements']['region__c']['#default_value'] = $region['sf_region_id'];
        }else{
            // default is salesforce southern california region id
            $form['elements']['region__c']['#default_value'] = '218';
        }
      }
      if (isset($form['elements']['webform_region_c'])) {
        // Set the form element 'region__c' to the value of $region.
        if(is_array($region) && isset($region['sf_region_id']) && !empty($region['sf_region_id'])){
            $form['elements']['webform_region_c']['#default_value'] = $region['sf_region_id'];
        }else{
            // default is salesforce southern california region id
            $form['elements']['webform_region_c']['#default_value'] = '218';
        }
      }
    }

  }


}

function ellison_webform_form_views_exposed_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $view = $form_state->getStorage('view');
  //echo $form_id;
  $view_id = $view['view']->id();
  $displayId = $view['view']->getDisplay()->display['id'];
  //dump($view_id);
  //dump($displayId);
  //dump($form['region_id']['#options']);
  if ($view_id == 'locations' && $displayId == 'block_1') {
    $session = \Drupal::request()->getSession();
    $ellison_region = $session->get('ellison_region');

    $region = [];
    if (!empty($_COOKIE['ellison_region'])) {
      $region = json_decode($_COOKIE['ellison_region'], TRUE);
    }
    elseif (!empty($ellison_region)) {
      $region = json_decode($ellison_region, TRUE);
    }
    if (!empty($region) && isset($form['region_id'])) {
      $parent_id = $region['region_id'];
      $children_terms = \Drupal::entityTypeManager()
        ->getStorage('taxonomy_term')
        ->loadTree('regions', $parent_id, NULL, FALSE);
      $sub_region_options = [];
      foreach ($children_terms as $term) {
        $sub_region_options[$term->tid] = '-'.$term->name;
      }
      $default_options = $form['region_id']['#options'];
      //dump($parent_id);
      //dump($default_options);

      if (isset($form['region_id'])) {
        $modified_options = [];
        if (isset($default_options['All'])) {
          $modified_options['All'] = $default_options['All'];
        }
        if (empty($sub_region_options)) {
          foreach ($default_options as $option) {
           // dump($option->option);
            if (isset($option->option[$parent_id])) {
              $modified_options[$parent_id] = $option->option[$parent_id];
            }
          }
         // dump($form['region_id']);
          $form['region_id']['#options'] = $modified_options;
          $form['region_id']['#prefix'] = '<div class="hidden">';
          $form['region_id']['#suffix'] = '</div>';
         // $form['region_id']['#attributes']['class'][] = 'hidden';
          //$form['region_id']['#access'] = FALSE;
        }
        else {
          //dump($sub_region_options);
          foreach ($default_options as $option) {
            // dump($option->option);
            if (isset($option->option[$parent_id])) {
              $modified_options[$parent_id] = $option->option[$parent_id];
            }
            if (isset($option->option) && is_array($option->option)) {
              //dump($option->option);
              $key_tid = array_key_first($option->option);
              //dump($intersect);
              if (!empty($sub_region_options[$key_tid])) {
                $modified_options[$key_tid] = $sub_region_options[$key_tid];
              }
            }
          }
          $form['region_id']['#options'] = $modified_options;
        }
      }

    }
  }
}
